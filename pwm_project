#include "definitions.h"
#include "movementFunctions.h"

enum LateralMovement{
 NONE = 0,
 FORWARD = 1,
 BACKWARD = 2
 };
 
enum Turning{
  NONE = 0,
  LEFT = 1,
  RIGHT = 2
  };

Motor_control ( enum LateralMovement lat, enum Turning turn, uint8_t power )
{
 if ( lat == 0 )
 {
    TPM0_C0V = 0;
    TPM0_C1V = 0;
	TPM0_C2V = TPM0->MOD * power;
	TPM0_C3V = 0;








void moveStop(void)
{
	TPM0_C0V = 0; // 
	TPM0_C1V = 0; // 
	TPM0_C2V = 0;
	TPM0_C3V = 0;
	
}
















void moveForward(int power)
{
	if (power > 100)
		power = 100;
	if (power < 0)
		power = 0;
	
	float coeff = (float) power / 100.0f;
	
	TPM0_C0V = TPM0->MOD * coeff;
	TPM0_C1V = 0;
	TPM0_C2V = TPM0->MOD * coeff;
	TPM0_C3V = 0;
}

void moveBackward(int power)
{
	if (power > 100)
		power = 100;
	if (power < 0)
		power = 0;
	
	float coeff = (float) power / 100.0f;
	
	TPM0_C0V = 0;
	TPM0_C1V = TPM0->MOD * coeff;
	TPM0_C2V = 0;
	TPM0_C3V = TPM0->MOD * coeff;
}

void moveLeft(int power)
{
	if (power > 100)
		power = 100;
	if (power < 0)
		power = 0;
	
	float coeff = (float) power / 100.0f;
	
	TPM0_C0V = 0;
	TPM0_C1V = TPM0->MOD * coeff;
	TPM0_C2V = TPM0->MOD * coeff;
	TPM0_C3V = 0;
}

void moveRight(int power)
{
	if (power > 100)
		power = 100;
	if (power < 0)
		power = 0;
	
	float coeff = (float) power / 100.0f;
	
	TPM0_C0V = TPM0->MOD * coeff;
	TPM0_C1V = 0;
	TPM0_C2V = 0;
	TPM0_C3V = TPM0->MOD * coeff;
}